/*
 * Pueda usar esta plantilla para la carga del reto a iMaster
 * Copie las clases de los paquetes Modelo, Vista, Controlador y Util
 * No incluya los import de los archivos .java solo las clases
 */
// Importaciones necesarias en iMaster
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.sql.PreparedStatement;

// Util (No modificar)
public class JDBCUtilities {
    private static final String DATABASE_LOCATION = "ProyectosConstruccion.db";
    private Connection conn;

    public JDBCUtilities () {
        try {
            getConnection();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public Connection getConnection() throws SQLException {
        String url = "jdbc:sqlite:"+DATABASE_LOCATION;
        conn = DriverManager.getConnection(url);
        return conn;
    }

    public ResultSet ejecutarConsulta(String consulta) {
        ResultSet rs = null;
        try {
            Statement stmt = conn.createStatement();
            rs = stmt.executeQuery(consulta);
        } catch (SQLException e) {
            System.err.println(e);
        }
        return rs;
    }

    public int ejecutarSentencia(String sentencia) {
        int nFilas = 0;
        try {
            PreparedStatement pstmt = conn.prepareStatement(sentencia);
            nFilas = pstmt.executeUpdate();
        } catch (SQLException e) {
            System.err.println(e);
        }
        return nFilas;
    }
}

// Remplace en adelante por las clases de sus archivos .java

// Vista
class VistaRequerimientos {
    public static final ControladorRequerimientos controlador = new ControladorRequerimientos();

    public static void requerimiento1(){
        try {
            ArrayList<Requerimiento_1> resultados = controlador.consultarRequerimiento1();
            // Por hacer
            System.out.println("Nombre material-Precio unidad-Id del proyecto");
            for (int i = 0; i<resultados.size(); i++){
                System.out.println(resultados.get(i).getNombreMaterial()+ "-"+"$"+
                                    resultados.get(i).getPrecio()+"-"+
                                    resultados.get(i).getIdProyecto());
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public static void requerimiento2(){
        try {
            ArrayList<Requerimiento_2> resultados = controlador.consultarRequerimiento2();
            // Por hacer
            System.out.println("Proveedor-Ventas");
            for (int i = 0; i<resultados.size(); i++){
                System.out.println(resultados.get(i).getProveedor()+ "-"+
                                    resultados.get(i).getCantidad());
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public static void requerimiento3(){
        try {
            ArrayList<Requerimiento_3> resultados = controlador.consultarRequerimiento3();
            // Por hacer
            System.out.println("Constructora-Costo de líderes");
            for (int i = 0; i<resultados.size(); i++){
                System.out.println(resultados.get(i).getConstructora()+ "-"+
                                    resultados.get(i).getCostoLideres());
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }
}

// Controlador
class ControladorRequerimientos {
    public ArrayList<Requerimiento_1> consultarRequerimiento1() throws SQLException {
        Requerimiento_1Dao r1 = new Requerimiento_1Dao();
        return r1.requerimiento1();
    }

    public ArrayList<Requerimiento_2> consultarRequerimiento2() throws SQLException {
        Requerimiento_2Dao r2 = new Requerimiento_2Dao();
        return r2.requerimiento2();
    }

    public ArrayList<Requerimiento_3> consultarRequerimiento3() throws SQLException {
        Requerimiento_3Dao r3 = new Requerimiento_3Dao();
        return r3.requerimiento3();
    }
}

// Modelo
// VO
class Requerimiento_1 {
    private String nombreMaterial;
    private Integer precio;
    private Integer idProyecto;

    public Requerimiento_1(String nombreMaterial, Integer precio, Integer idProyecto){
        this.nombreMaterial = nombreMaterial;
        this.precio = precio;
        this.idProyecto = idProyecto;
    }


    public void setNombreMaterial(String nombreMaterial) {
        this.nombreMaterial = nombreMaterial;
    }
    public void setPrecio(Integer precio) {
        this.precio = precio;
    }
    public void setIdProyecto(Integer idProyecto) {
        this.idProyecto = idProyecto;
    }
    public String getNombreMaterial() {
        return nombreMaterial;
    }
    public Integer getPrecio() {
        return precio;
    }
    public Integer getIdProyecto() {
        return idProyecto;
    }
}

class Requerimiento_2 {
    private String proveedor;
    private Integer cantidad;

    public Requerimiento_2(String proveedor, Integer cantidad){
        this.proveedor = proveedor;
        this.cantidad = cantidad;

    }


    public void setProveedor(String proveedor) {
        this.proveedor = proveedor;
    }
    public void setCantidad(Integer cantidad) {
        this.cantidad = cantidad;
    }
    public String getProveedor() {
        return proveedor;
    }
    public Integer getCantidad() {
        return cantidad;
    }
}

class Requerimiento_3 {
    private String constructora;
    private Integer costoLideres;

    public Requerimiento_3(String constructora, Integer costoLideres){
        this.constructora = constructora;
        this.costoLideres = costoLideres;
    }

    public void setConstructora(String constructora) {
        this.constructora = constructora;
    }
    public void setCostoLideres(Integer costoLideres) {
        this.costoLideres = costoLideres;
    }
    public String getConstructora() {
        return constructora;
    }
    public Integer getCostoLideres() {
        return costoLideres;
    }
}

// DAO
class Requerimiento_1Dao {
    public ArrayList<Requerimiento_1> requerimiento1() throws SQLException {
        ArrayList<Requerimiento_1> resultados = new ArrayList<>();
        JDBCUtilities conexion = new JDBCUtilities();

        // Por hacer
        try{
            String query1 ="SELECT mc.Nombre_Material, mc.Precio_Unidad, p.ID_Proyecto FROM Proyecto p "+
            "JOIN Compra c ON p.ID_Proyecto =c.ID_Proyecto "+
            "JOIN MaterialConstruccion mc ON c.ID_MaterialConstruccion = mc.ID_MaterialConstruccion "+
            "WHERE p.Ciudad = 'Ibague' AND mc.Importado ='Si' "+
            "LIMIT 100;";
            
            ResultSet resultado1 = conexion.ejecutarConsulta(query1);
            while (resultado1.next()){
                String nombreMaterial = resultado1.getString("Nombre_Material");
                Integer precio = resultado1.getInt("Precio_Unidad");
                Integer id= resultado1.getInt("ID_Proyecto");

                resultados.add(new Requerimiento_1(nombreMaterial, precio, id));

            }
        } catch(Exception e){
            System.err.println(e);
        }


        return resultados;
    }
}

class Requerimiento_2Dao {
    public ArrayList<Requerimiento_2> requerimiento2() throws SQLException {
        ArrayList<Requerimiento_2> resultados = new ArrayList<>();
        JDBCUtilities conexion = new JDBCUtilities();

        // Por hacer
        try{
            String query2 ="SELECT c.Proveedor, COUNT(c.Cantidad) AS 'Ventas' "+
            "FROM Compra c "+
            "GROUP BY c.Proveedor "+
            "ORDER BY Ventas DESC "+
            "LIMIT 100;";
            
            ResultSet resultado2 = conexion.ejecutarConsulta(query2);
            while (resultado2.next()){
                String proveedor = resultado2.getString("Proveedor");
                Integer ventas = resultado2.getInt("Ventas");

                resultados.add(new Requerimiento_2(proveedor,ventas));

            }
        } catch(Exception e){
            System.err.println(e);
        }


        return resultados;
    }
}

class Requerimiento_3Dao {
    public ArrayList<Requerimiento_3> requerimiento3() throws SQLException {
        ArrayList<Requerimiento_3> resultados = new ArrayList<>();
        JDBCUtilities conexion = new JDBCUtilities();

        // Por hacer
        try{
            String query3 ="SELECT p.Constructora, SUM(l.Salario) AS 'Costo de líderes' FROM Proyecto p "+ 
            "JOIN Lider l ON p.ID_Lider = l.ID_Lider "+ 
            "GROUP BY p.Constructora "+
            "HAVING SUM(l.Salario) > 40000000 "+
            "LIMIT 100; ";
            
            ResultSet resultado3 = conexion.ejecutarConsulta(query3);
            while (resultado3.next()){
                String constructora = resultado3.getString("Constructora");
                Integer costoLider = resultado3.getInt("Costo de Líderes");

                resultados.add(new Requerimiento_3(constructora,costoLider));

            }
        } catch(Exception e){
            System.err.println(e);
        }

        return resultados;
    }
}